{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["let carMake = 'Toyota';\nlet carModel = 'Corolla';\nlet age = 5;\nlet colors = ['red', 'blue', 'green'];\n\n// Equality and inequality tests with strings\nconsole.log(`Is the car make ${carMake} equal to 'Toyota'? I predict True.`);\nconsole.log(carMake == 'Toyota');\n\nconsole.log(`Is the car make ${carMake} not equal to 'Honda'? I predict True.`);\nconsole.log(carMake != 'Honda');\n\nconsole.log(`Is the car model ${carModel} equal to 'Camry'? I predict False.`);\nconsole.log(carModel == 'Camry');\n\nconsole.log(`Is the car model ${carModel} not equal to 'Corolla'? I predict False.`);\nconsole.log(carModel != 'Corolla');\n\n// Tests using the lower case function\nconsole.log(`Is the car make ${carMake} equal to 'toyota'? I predict True.`);\nconsole.log(carMake.toLowerCase() == 'toyota');\n\nconsole.log(`Is the car model ${carModel} equal to 'corolla'? I predict True.`);\nconsole.log(carModel.toLowerCase() == 'corolla');\n\n// Numerical tests\nconsole.log(`Is the age ${age} greater than 3? I predict True.`);\nconsole.log(age > 3);\n\nconsole.log(`Is the age ${age} less than 2? I predict False.`);\nconsole.log(age < 2);\n\nconsole.log(`Is the age ${age} greater than or equal to 5? I predict True.`);\nconsole.log(age >= 5);\n\nconsole.log(`Is the age ${age} less than or equal to 4? I predict False.`);\nconsole.log(age <= 4);\n\n// Tests using \"and\" and \"or\" operators\nconsole.log(`Is the car make ${carMake} equal to 'Toyota' and the car model ${carModel} equal to 'Corolla'? I predict True.`);\nconsole.log(carMake == 'Toyota' && carModel == 'Corolla');\n\nconsole.log(`Is the car make ${carMake} equal to 'Honda' or the car model ${carModel} equal to 'Camry'? I predict False.`);\nconsole.log(carMake == 'Honda' || carModel == 'Camry');\n\n// Test whether an item is in an array\nconsole.log(`Is the color 'red' in the colors array? I predict True.`);\nconsole.log(colors.includes('red'));\n\nconsole.log(`Is the color 'black' in the colors array? I predict False.`);\nconsole.log(colors.includes('black'));\n\n// Test whether an item is not in an array\nconsole.log(`Is the color 'yellow' not in the colors array? I predict True.`);\nconsole.log(!colors.includes('yellow'));\n\nconsole.log(`Is the color 'red' not in the colors array? I predict False.`);\nconsole.log(!colors.includes('red'));\n"],
  "mappings": ";AAAA,IAAI,UAAU;AACd,IAAI,WAAW;AACf,IAAI,MAAM;AACV,IAAI,SAAS,CAAC,OAAO,QAAQ,OAAO;AAGpC,QAAQ,IAAI,mBAAmB,4CAA4C;AAC3E,QAAQ,IAAI,WAAW,QAAQ;AAE/B,QAAQ,IAAI,mBAAmB,+CAA+C;AAC9E,QAAQ,IAAI,WAAW,OAAO;AAE9B,QAAQ,IAAI,oBAAoB,6CAA6C;AAC7E,QAAQ,IAAI,YAAY,OAAO;AAE/B,QAAQ,IAAI,oBAAoB,mDAAmD;AACnF,QAAQ,IAAI,YAAY,SAAS;AAGjC,QAAQ,IAAI,mBAAmB,4CAA4C;AAC3E,QAAQ,IAAI,QAAQ,YAAY,KAAK,QAAQ;AAE7C,QAAQ,IAAI,oBAAoB,8CAA8C;AAC9E,QAAQ,IAAI,SAAS,YAAY,KAAK,SAAS;AAG/C,QAAQ,IAAI,cAAc,qCAAqC;AAC/D,QAAQ,IAAI,MAAM,CAAC;AAEnB,QAAQ,IAAI,cAAc,mCAAmC;AAC7D,QAAQ,IAAI,MAAM,CAAC;AAEnB,QAAQ,IAAI,cAAc,iDAAiD;AAC3E,QAAQ,IAAI,OAAO,CAAC;AAEpB,QAAQ,IAAI,cAAc,+CAA+C;AACzE,QAAQ,IAAI,OAAO,CAAC;AAGpB,QAAQ,IAAI,mBAAmB,+CAA+C,8CAA8C;AAC5H,QAAQ,IAAI,WAAW,YAAY,YAAY,SAAS;AAExD,QAAQ,IAAI,mBAAmB,6CAA6C,6CAA6C;AACzH,QAAQ,IAAI,WAAW,WAAW,YAAY,OAAO;AAGrD,QAAQ,IAAI,yDAAyD;AACrE,QAAQ,IAAI,OAAO,SAAS,KAAK,CAAC;AAElC,QAAQ,IAAI,4DAA4D;AACxE,QAAQ,IAAI,OAAO,SAAS,OAAO,CAAC;AAGpC,QAAQ,IAAI,gEAAgE;AAC5E,QAAQ,IAAI,CAAC,OAAO,SAAS,QAAQ,CAAC;AAEtC,QAAQ,IAAI,8DAA8D;AAC1E,QAAQ,IAAI,CAAC,OAAO,SAAS,KAAK,CAAC;",
  "names": []
}
